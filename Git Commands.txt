[TOPICS]
 安裝與設定 Git

Ubuntu 底下安裝 Git 非常簡單，只要在終端機執行：

sudo apt-get install git-core git-doc
接着，建議執行以下指令，將系統預設編輯器設定為 Vim：

sudo update-alternatives --config editor
每個使用者帳號都會有自己的 Git 設定檔，通常是：

~/.gitconfig
例如我的設定檔內容是：

[user]
name = 張旭
email = zx1986@gmail.com

[color]
diff = auto
初始化 Git
（資料夾內會多出一個名為 .git 的隱藏資料夾）：

git init
之後只要每次修改或新增檔案後，
執行以下兩個指令，Git 就會做一次紀錄：

git add 修改或新增的檔案名
git commit -m '關於此次修改的描述訊息'
可以開一個新的資料夾進行練習：

mkdir test
cd test
touch hello
git init
git add hello
git commit -m 'hello, Git!'
好了，您已經開始在使用 Git 啦！

Git 輔助說明

需要注意，Git 不會把空的資料夾加入控管，
例如 log、cache 這類資料夾，我們通常不會想要追蹤裏面的檔案，
但還是需要這個資料夾存在，可以在底下建立一個隱藏檔，例如 .gitkeep：

cd log
tocuh .gitkeep
在跟「.git」同一層的目錄中，可以建立一個 .gitignore 檔案。
.gitignore 用來設定「不希望被 Git 控管的檔案與資料夾」。
一個簡單的 .gitignore 內容可以是這樣：

cache/
log/*.log
tmp/
*.tmp
*.swp
*.o
*.so
*.a
*.exe
*~
執行 git help 會顯示常用的 Git 指令與簡單說明：

add        Add file contents to the index
bisect     Find by binary search the change that introduced a bug
branch     List, create, or delete branches
checkout   Checkout a branch or paths to the working tree
clone      Clone a repository into a new directory
commit     Record changes to the repository
diff       Show changes between commits, commit and working tree, etc
fetch      Download objects and refs from another repository
grep       Print lines matching a pattern
init       Create an empty git repository or reinitialize an existing one
log        Show commit logs
merge      Join two or more development histories together
mv         Move or rename a file, a directory, or a symlink
pull       Fetch from and merge with another repository or a local branch
push       Update remote refs along with associated objects
rebase     Forward-port local commits to the updated upstream head
reset      Reset current HEAD to the specified state
rm         Remove files from the working tree and from the index
show       Show various types of objects
status     Show the working tree status
tag        Create, list, delete or verify a tag object signed with GPG
在 Git 指令後加上 -h 參數，能夠查詢該指令詳細的用法，例如：

git add -h
git commit -h
git pull -h
git push -h

[TOPICS --]